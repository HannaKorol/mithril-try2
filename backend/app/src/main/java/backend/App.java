/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package backend; // Указываем пакет, в котором находится наш класс (обычно совпадает с папкой)


//Импорт библиотек Jetty:
import org.eclipse.jetty.server.Server;  //основной класс для создания сервера.
import org.eclipse.jetty.server.ServerConnector; //класс для установки подключения сервера, определяет, на каком порту сервер будет слушать запросы.
import org.eclipse.jetty.http.HttpHeader; // класс для работы с HTTP-заголовками.
import org.eclipse.jetty.io.Content; //классы, помогающие записывать контент в ответ и:
import org.eclipse.jetty.util.Callback; //обрабатывать асинхронные задачи.
import org.eclipse.jetty.server.*;


public class App {
	public String getGreeting() {  //метод, который возвращает строку "Hello World!". Он не выводит ничего в консоль, а лишь возвращает эту строку.
		return "Hello World!";
	}

	public static void main(String[] args)throws Exception {
		System.out.println(new App().getGreeting());               //System.out.println()-  выводит строку "Hello World!" в консоль. Метод getGreeting() возвращает строку "Hello World!".



		//Создаем сервер на порту 9999
		var server = new Server(9999);  //создание нового объекта сервера, который будет слушать порт 9999.
		ServerConnector connector = new ServerConnector(server);  // создается соединение с сервером.

		server.addConnector(connector); //подключаем созданный connector к серверу, чтобы сервер начал принимать запросы через этот соединитель.



		class ExampleHandler extends Handler.Wrapper{ //Handler.Wrapper — это базовый класс для обработки HTTP-запросов.

			@Override
			public boolean handle(Request request, Response response, Callback callback) throws Exception{

				response.setStatus(200);
				response.getHeaders().put(HttpHeader.CONTENT_TYPE, "text/html; charset=UTF-8");

				//Write a Hello World response.
				Content.Sink.write(response, true, """
					   <DOCTYPE html>
					   <html>
					   <head>
						   <title>Jetty Hello World Handler</title>
					   </head>
					   <body>
						   <p>Hello World</p>
					   </body>
					   </html>
				""", callback);
				return true;
			}

		}
		server.setHandler(new ExampleHandler());

		//Когда все настроено, вы запускаете сервер Jetty через Gradle, и он будет слушать HTTP-запросы на порту, например, localhost:8080.


		server.start();
		server.join();
	}
}
